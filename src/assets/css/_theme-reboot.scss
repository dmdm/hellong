// TODO replace hard-coded colors


@mixin reboot-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $success: md-palette($md-green, 600);

  // Colors
  //
  // Grayscale and brand colors for use across Bootstrap.

  $gray-dark: #373a3c !default;
  $gray: #55595c !default;
  $gray-light: #818a91 !default;
  $gray-lighter: #eceeef !default;
  $gray-lightest: #f7f7f9 !default;

  $brand-primary: md-color($primary) !default;
  $brand-success: md-color($success) !default;
  $brand-info: md-color($accent) !default;
  $brand-warning: md-color($warn) !default;
  $brand-danger: md-color($warn) !default;
  $brand-inverse: $gray-dark !default;

  // Body
  //
  // Settings for the `<body>` element.

  $body-bg: map-get(map-get($theme, background), background);
  $body-color: map-get(map-get($theme, foreground), foreground);


  // Misc
  //
  $cursor-disabled:                not-allowed !default;

  // Links
  //
  // Style anchor elements.

  $link-color: $brand-primary !default;
  $link-decoration: none !default;
  $link-hover-color: darken($link-color, 15%) !default;
  $link-hover-decoration: underline !default;

  // Spacing
  //
  // Control the default styling of most Bootstrap elements by modifying these
  // variables. Mostly focused on spacing.
  // You can add more entries to the $spacers map, should you need more variation.

  $spacer: 1rem !default;
  $spacer-x: $spacer !default;
  $spacer-y: $spacer !default;
  $spacers: (
          0: (
                  x: 0,
                  y: 0
          ),
          1: (
                  x: $spacer-x,
                  y: $spacer-y
          ),
          2: (
                  x: ($spacer-x * 1.5),
                  y: ($spacer-y * 1.5)
          ),
          3: (
                  x: ($spacer-x * 3),
                  y: ($spacer-y * 3)
          )
  ) !default;
  $border-width: 1px !default;

  // Typography
  //
  // Font, line-height, and color for body text, headings, and more.

  $font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif !default;
  $font-family-serif: Georgia, "Times New Roman", Times, serif !default;
  $font-family-monospace: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
  $font-family-base: $md-font-family !default;
  //$font-family-base: $font-family-sans-serif !default;


  // Pixel value used to responsively scale all typography. Applied to the `<html>` element.
  $font-size-root: $md-body-font-size-base !default;
  //$font-size-root: 16px !default;

  $font-size-base: 1rem !default;
  $font-size-lg: 1.25rem !default;
  $font-size-sm: .875rem !default;
  $font-size-xs: .75rem !default;

  $line-height-base: 1.5 !default;

  $font-size-h1: 2.5rem !default;
  $font-size-h2: 2rem !default;
  $font-size-h3: 1.75rem !default;
  $font-size-h4: 1.5rem !default;
  $font-size-h5: 1.25rem !default;
  $font-size-h6: 1rem !default;

  $display1-size: 6rem !default;
  $display2-size: 5.5rem !default;
  $display3-size: 4.5rem !default;
  $display4-size: 3.5rem !default;

  $display1-weight: 300 !default;
  $display2-weight: 300 !default;
  $display3-weight: 300 !default;
  $display4-weight: 300 !default;

  $headings-margin-bottom: ($spacer / 2) !default;
  $headings-font-family: inherit !default;
  $headings-font-weight: 500 !default;
  $headings-line-height: 1.1 !default;
  $headings-color: inherit !default;

  $lead-font-size: 1.25rem !default;
  $lead-font-weight: 300 !default;

  $small-font-size: 80% !default;

  $text-muted: $gray-light !default;

  $abbr-border-color: $gray-light !default;

  $blockquote-small-color: $gray-light !default;
  $blockquote-font-size: ($font-size-base * 1.25) !default;
  $blockquote-border-color: $gray-lighter !default;
  $blockquote-border-width: .25rem !default;

  $hr-border-color: rgba(0, 0, 0, .1) !default;
  $hr-border-width: $border-width !default;

  $mark-padding: .2em !default;

  $dt-font-weight: bold !default;

  $kbd-box-shadow: inset 0 -.1rem 0 rgba(0, 0, 0, .25) !default;
  $nested-kbd-font-weight: bold !default;

  $list-inline-padding: 5px !default;

  // Tables
  //
  // Customizes the `.table` component with basic values, each used across all table variations.

  $table-cell-padding: .75rem !default;
  $table-sm-cell-padding: .3rem !default;

  $table-bg: transparent !default;
  $table-bg-accent: rgba(0, 0, 0, .05) !default;
  $table-bg-hover: rgba(0, 0, 0, .075) !default;
  $table-bg-active: $table-bg-hover !default;

  $table-border-width: $border-width !default;
  $table-border-color: $gray-lighter !default;

  html {
    box-sizing: border-box;
  }

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  // Make viewport responsive
  //
  // @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
  // some cases. See https://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
  // Eventually @viewport will replace <meta name="viewport">.
  //
  // However, `device-width` is broken on IE 10 on Windows (Phone) 8,
  // (see https://timkadlec.com/2013/01/windows-phone-8-and-device-width/ and https://github.com/twbs/bootstrap/issues/10497)
  // and the fix for that involves a snippet of JavaScript to sniff the user agent
  // and apply some conditional CSS.
  //
  // See https://getbootstrap.com/getting-started/#support-ie10-width for the relevant hack.
  //
  // Wrap `@viewport` with `@at-root` for when folks do a nested import (e.g.,
  // `.class-name { @import "bootstrap"; }`).
  @at-root {
    @-ms-viewport {
      width: device-width;
    }
  }

  //
  // Reset HTML, body, and more
  //

  html {
    // Sets a specific default `font-size` for user with `rem` type scales.
    font-size: $font-size-root;
    // As a side-effect of setting the @viewport above,
    // IE11 & Edge make the scrollbar overlap the content and automatically hide itself when not in use.
    // Unfortunately, the auto-showing of the scrollbar is sometimes too sensitive,
    // thus making it hard to click on stuff near the right edge of the page.
    // So we add this style to force IE11 & Edge to use a "normal", non-overlapping, non-auto-hiding scrollbar.
    // See https://github.com/twbs/bootstrap/issues/18543
    -ms-overflow-style: scrollbar;
    // Changes the default tap highlight to be completely transparent in iOS.
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  body {
    // Make the `body` use the `font-size-root`
    font-family: $font-family-base;
    font-size: $font-size-base;
    line-height: $line-height-base;
    // Go easy on the eyes and use something other than `#000` for text
    color: $body-color;
    // By default, `<body>` has no `background-color` so we set one as a best practice.
    background-color: $body-bg;
  }

  // Suppress the focus outline on elements that cannot be accessed via keyboard.
  // This prevents an unwanted focus outline from appearing around elements that
  // might still respond to pointer events.
  //
  // Credit: https://github.com/suitcss/base
  [tabindex="-1"]:focus {
    outline: none !important;
  }

  //
  // Typography
  //

  // Remove top margins from headings
  //
  // By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
  // margin for easier control within type scales as it avoids margin collapsing.
  h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
    margin-bottom: .5rem;
  }

  // Reset margins on paragraphs
  //
  // Similarly, the top margin on `<p>`s get reset. However, we also reset the
  // bottom margin to use `rem` units instead of `em`.
  p {
    margin-top: 0;
    margin-bottom: 1rem;
  }

  // Abbreviations and acronyms
  abbr[title],
    // Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257
  abbr[data-original-title] {
    cursor: help;
    border-bottom: 1px dotted $abbr-border-color;
  }

  address {
    margin-bottom: 1rem;
    font-style: normal;
    line-height: inherit;
  }

  ol,
  ul,
  dl {
    margin-top: 0;
    margin-bottom: 1rem;
  }

  ol ol,
  ul ul,
  ol ul,
  ul ol {
    margin-bottom: 0;
  }

  dt {
    font-weight: $dt-font-weight;
  }

  dd {
    margin-bottom: .5rem;
    margin-left: 0; // Undo browser default
  }

  blockquote {
    margin: 0 0 1rem;
  }

  //
  // Links
  //

  a {
    color: $link-color;
    text-decoration: $link-decoration;

    @include hover-focus {
      color: $link-hover-color;
      text-decoration: $link-hover-decoration;
    }

    &:focus {
      @include tab-focus();
    }
  }

  // And undo these styles for placeholder links/named anchors (without href)
  // which have not been made explicitly keyboard-focusable (without tabindex).
  // It would be more straightforward to just use a[href] in previous block, but that
  // causes specificity issues in many other styles that are too complex to fix.
  // See https://github.com/twbs/bootstrap/issues/19402

  a:not([href]):not([tabindex]) {
    color: inherit;
    text-decoration: none;

    @include hover-focus {
      color: inherit;
      text-decoration: none;
    }

    &:focus {
      outline: none;
    }
  }

  //
  // Code
  //

  pre {
    // Remove browser default top margin
    margin-top: 0;
    // Reset browser default of `1em` to use `rem`s
    margin-bottom: 1rem;
    // Normalize v4 removed this property, causing `<pre>` content to break out of wrapping code snippets
    overflow: auto;
  }

  //
  // Figures
  //

  figure {
    // Normalize adds `margin` to `figure`s as browsers apply it inconsistently.
    // We reset that to create a better flow in-page.
    margin: 0 0 1rem;
  }

  //
  // Images
  //

  img {
    // By default, `<img>`s are `inline-block`. This assumes that, and vertically
    // centers them. This won't apply should you reset them to `block` level.
    vertical-align: middle;
    // Note: `<img>`s are deliberately not made responsive by default.
    // For the rationale behind this, see the comments on the `.img-fluid` class.
  }

  // iOS "clickable elements" fix for role="button"
  //
  // Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
  // for traditionally non-focusable elements with role="button"
  // see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

  [role="button"] {
    cursor: pointer;
  }

  // Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
  //
  // In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
  // DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
  // However, they DO support removing the click delay via `touch-action: manipulation`.
  // See:
  // * https://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
  // * http://caniuse.com/#feat=css-touch-action
  // * https://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay

  a,
  area,
  button,
  [role="button"],
  input,
  label,
  select,
  summary,
  textarea {
    touch-action: manipulation;
  }

  //
  // Tables
  //

  table {
    // No longer part of Normalize since v4
    border-collapse: collapse;
    // Reset for nesting within parents with `background-color`.
    background-color: $table-bg;
  }

  caption {
    padding-top: $table-cell-padding;
    padding-bottom: $table-cell-padding;
    color: $text-muted;
    text-align: left;
    caption-side: bottom;
  }

  th {
    // Centered by default, but left-align-ed to match the `td`s below.
    text-align: left;
  }

  //
  // Forms
  //

  label {
    // Allow labels to use `margin` for spacing.
    display: inline-block;
    margin-bottom: .5rem;
  }

  // Work around a Firefox/IE bug where the transparent `button` background
  // results in a loss of the default `button` focus styles.
  //
  // Credit: https://github.com/suitcss/base/
  button:focus {
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
  }

  input,
  button,
  select,
  textarea {
    // Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
    // properly inherited. However, `line-height` isn't inherited there.
    line-height: inherit;
  }

  input[type="radio"],
  input[type="checkbox"] {
    // Apply a disabled cursor for radios and checkboxes.
    //
    // Note: Neither radios nor checkboxes can be readonly.
    &:disabled {
      cursor: $cursor-disabled;
    }
  }

  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    // Remove the default appearance of temporal inputs to avoid a Mobile Safari
    // bug where setting a custom line-height prevents text from being vertically
    // centered within the input.
    //
    // Bug report: https://github.com/twbs/bootstrap/issues/11266
    -webkit-appearance: listbox;
  }

  textarea {
    // Textareas should really only resize vertically so they don't break their (horizontal) containers.
    resize: vertical;
  }

  fieldset {
    // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
    // so we reset that to ensure it behaves more like a standard block element.
    // See https://github.com/twbs/bootstrap/issues/12359.
    min-width: 0;
    // Reset the default outline behavior of fieldsets so they don't affect page layout.
    padding: 0;
    margin: 0;
    border: 0;
  }

  legend {
    // Reset the entire legend element to match the `fieldset`
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: .5rem;
    font-size: 1.5rem;
    line-height: inherit;
  }

  input[type="search"] {
    // This overrides the extra rounded corners on search inputs in iOS so that our
    // `.form-control` class can properly style them. Note that this cannot simply
    // be added to `.form-control` as it's not specific enough. For details, see
    // https://github.com/twbs/bootstrap/issues/11586.
    -webkit-appearance: none;
  }

  // todo: needed?
  output {
    display: inline-block;
    //  font-size: $font-size-base;
    //  line-height: $line-height;
    //  color: $input-color;
  }

  // Always hide an element with the `hidden` HTML attribute (from PureCSS).
  [hidden] {
    display: none !important;
  }
}
